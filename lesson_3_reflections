When would you want to use a remote repository rather than keeping all your work local?
- You would want to use a remote repository when you are working with others who need to read or update files.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
- You would want to pull changes manually because an automatic pull may overwrite any changes you have made locally.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
-fork: a clone from another repository; resides in GitHub
-clone: a copy of a repository; can reside in GitHub or locally
-branch: a copy that is part of a single repository

What is the benefit of having a copy of the last known state of the remote stored locally?
- The benefit of having a copy of the last known state of the remote stored locally is that you can retrieve changes from the remote 
  without overwriting anything you may have done locally.  You can then compare the remote to the local to see if updates to the 
  remote will affect what you have done.
  
How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
- Collaborating without Git or GitHub would be hard to do if working with many different people who were making changes on the 
  files or related files.  Without GitHub a file compare could be used to compare changes but this would only work well for 2 
  people who were making small changes.
  
When would you want to make changes in a separate branch rather than directly in master? 
  What benefits does each approach have?
- You sould want to make changes in a separate branch if you wanted to test out some code.  Making a change in a branch gives you 
  the option of testing code before you merge it into master.  Making changes in master keeps you from having to do all those
  steps!
  
  
